【必須課題】
# 課題を進める前に

- LAMP環境を構築していただきます
- サーバで行ったことはなるべく作業ログとして残しておきましょう
- 作業手順や不明点を調べる時は、まず一次情報源を参考にしましょう
- 一次情報源は公式サイト、ドキュメント、ソースコードなど
- 日本語のドキュメントは古いことが多いので、なるべく英語のドキュメントを参考にしましょう
- 一次情報源を探すのが難しい場合は、信頼性の高いサイトを参照してください
- 例: IPアドレスについては、日本のIPアドレスを管理しているJPNICのサイトを参考にする
- ニュースサイト、情報サイト、blog、Wikipediaは、一次情報源を見てもよく分からない場合に参考にしてください
- ただし、そのまま鵜呑みにするのではなく、その情報が正しいかを再度一次情報源を参照して確認しましょう
- コマンドについて調べる時は、manコマンドや各コマンドのhelpを参考にしましょう
- 例: lsコマンドについて調べたいなら
- `man ls`
- `ls --help`



# 課題内容

## 1．使用するOSやサーバ環境について

- 自分が使いたいLinuxディストリビューションを選択してください
- ただし、最新安定版のバージョンにしましょう
- 何を使ったら良いか分からない場合は、下記のいずれかを使うと良いでしょう
- CentOS Linux
- AlmaLinux
- Ubuntu
- サーバ環境は、自分のPC上の仮想マシンとして作成してください
- とはいえ、特に決まりはないので、使っていないPCに直接OSをインストールしても良いですし、クラウドやVPSなどを利用しても良いです



## 2．OSのインストール

- VirtualBoxやWSLを利用してインストールしてください
- 公式ドキュメントに手順がない場合も多いので、そのときは他のサイトを参考にしてOKです



## 3．OSインストール後

OSをインストールしサーバにログインできたらまず下記を行ってください

- サーバのタイムゾーンをJSTにする
- すでにJSTであれば飛ばしてください
- ヒント
- `man timedatectl`
- 下記NTPサーバと時刻同期を行う
- ntp1.jst.mfeed.ad.jp
- ntp2.jst.mfeed.ad.jp
- ntp3.jst.mfeed.ad.jp
- ヒント
- https://chrony.tuxfamily.org/
- `man chronyd`, `man chronyc`
- サーバのファイアウォールを有効(起動)にしてください
- firewalld, ufwなど
- https://firewalld.org/
- `man firewall-cmd`
- `man ufw`
- SELinuxを無効にしてください

## 4．Apache

LAMPのAであるApacheをインストールし、Webページが表示される環境を作りましょう

### 要求仕様

- Apacheのバージョンは2.4系をインストールしてください
- Apacheは自動起動するように設定してください
- サーバが再起動しても自動でApacheが起動する
- ヒント
- `man systemctl`
- VirtualHostの機能を利用し、下記の要件を満たしてください
- Webブラウザで`http://<自分の名字>-hbtask.local/` にアクセスすると「こんにちは。ありがとう。」と表示される
- 例: `http://kuramochi-hbtask.local`
- Webブラウザで`http://<自分の名前>-hbtask.local/` にアクセスすると「ありがとう。こんにちは。」と表示される
- 例: `http://wataru-hbtask.local/`
- ヒント
- hostsファイルを利用して名前解決を行います

### 注意点

- パッケージインストールの手順は公式ドキュメントに記載がないため、下記コマンドでインストールしてください(自分のOSに合ったコマンドを実行してください)
- `yum install httpd`
- `dnf install httpd`
- `apt install apache2`
- Apacheの設定方法は公式ドキュメントを参考にしましょう
- hostsファイルについては一次情報源を見つけることは困難なので、他のサイトを参考にしてOKです



## 5．PHP

LAMPのPであるPHPをインストールし、PHPを利用したWebページが表示される環境を作りましょう

### 要求仕様

- PHPのバージョンは7系をインストールしてください
- Webブラウザで`http://<自分の名字>-hbtask.local/phpinfo.php`にアクセスすると、phpinfoの情報が表示される

### 注意点

- パッケージインストールの手順は公式ドキュメントに記載がないため、自分のOSに合ったインストール方法を他のサイトを参考にしてOKです
- デフォルトで登録されているリポジトリでPHPの7系がインストールできない場合は、サードパーティのリポジトリを利用してインストールしてください



## 6．MySQL

LAMPのMであるMySQLをインストールし、データベースを利用したPHPのWebページが表示される環境を作りましょう

### 要求仕様

- MySQLのバージョンは8系をインストールしてください
- MySQLは自動起動するようにしてください
- MySQLに新しく`hbtask`というデータベースを作成してください
- `hbtask`データベースに`meibo`というテーブルを作成してください
- カラム
- `number`（INT）
- `username`（VARCHAR）
- `meibo`テーブルに下記データを登録してください
- `number`: 1
- `username`: <自分のフルネーム>
- 例: `Kuramochi Wataru`
- Webブラウザで`http://<自分の名前>-hbtask.local/mysql.php`にアクセスすると、`meibo`テーブルに登録した自分のフルネームが表示される
- `meibo`テーブルから、`number`カラムが1の`username`を抽出させる
- 表示例: 「私の名前は Kuramochi Wataru です。」

### 注意点

- MySQLの公式ドキュメントを参考に、インストールと設定を行いましょう



## 7．WordPress

WordPressを利用してブログサイトを構築しましょう

### 要求仕様

- Webブラウザで`http://<自分の名字>-hbtask.local/blog/`にアクセスすると、WordPressのブログサイトが表示される
- 構築したブログサイトで記事の投稿ができる

### 注意点

- パッケージのインストールではなく、公式サイトの手順を参考にインストールしてください

【発展課題】
発展課題として、やってみたら楽しいと思うものをいろいろ記載してみました。
必須課題では物足りないと感じたら、興味があるものからいろいろやってみると楽しいと思います。

- LAMP環境をソースインストールで構築する
- OSインストール後は、下記パッケージをインストールする
- RHEL系: `yum groupinstall "Development tools"`
- Debian系: `apt install build-essential`
- それ以外にインストールするものは全てソースインストールする
- ApacheをNginxに入れ替える
- PHPの扱い方も変わります
- LAMP環境を監視する
- LAMP環境とは別にサーバを用意し、下記いずれかの監視ソフトウェアを用いてLAMP環境を監視する
- Nagios
- Zabbix
- Prometheus
- WebサーバとDBサーバを分割してWordPressのブログサイトを構築する
- 最初に構築したLAMP環境は1台のサーバにApacheとMySQLをインストールしましたが、2台のサーバに分割して、1台をApacheとPHPがインストールされているWebサーバとし、もう一台をMySQLがインストールされているDBサーバとする
- Webサーバを冗長化する
- WebサーバとDBサーバを分割していることが前提です
- ロードバランサ用のWebサーバ(Nginx)を用意する
- ロードバランサからリクエストが振り分けられるWebサーバを2台用意する
- DBサーバは1台のみで、2台のWebサーバは同じDBサーバを利用する